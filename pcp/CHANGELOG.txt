# Changelog
This file will document and keep track of changes with each push to the master branch.

Put most recent commits at the top please!

2019-01-16 15:30 CST [PB] ==================

- set_phases function fixed minor syntax bugs
- need set amps function (hacked for now)

- Testing the roach configuration, and comparing with kidpy
- using roach0 run through set up start to finish, and ensure that tones are being written
 - the kidpy reference tone list uses 101 frequencies between min_neg_freq and max_pos_freq (read from the configuration file )
todo
 - allow tonelist to write baseband frequencies only (can hack it as is, but should make it work properly with rf_freqs...etc)
 -


2019-01-09 15:30 CST [PB] ==================
- Based on the muscat readout meeting, made the following changes to the tonelist.Tonelist
    - included max_pos_freq and min_neg_freq to calculate usable bandwidth baseband
    - include list of "excluded" frequencies that the LO shouldn't be set to (for PLL generated sources)
    - useful roach_interface functions - get current qdr, get regsiter names...etc

- check mapping of tonelist to dirfile generation
- modified functions in lib_dirfiles to replace 'ntones' with 'tones', which can accept either a number, or
a list of tone names
    - changed generate_sweep_dirfile, generate_sweep_fragment, generate_sweep_fields, generate_main_rawfields, create_dirfile

    [CONFIG FILE CHANGE] roach_config - replaced "tones" with "max_ntones" in packet structure
- TODO
    - in mux_channel.py, in the sweep averaging code, there is a check to see if the field name starts with "K" - this is not ideal
    and will cause problems - needs to be changed. How to only choose tones? maybe something in the format file?
        - using an 'onres' namespace for tones might be the easiest way to do this
    - fix defaults for datalog_mp.py - set_active_dirfile function
    - remove ntones from packet_structure (as it could be different for different roaches)

2019-01-07 15:30 CST [PB] ==================

- Added some convenience definitions for filesys paths in configuration/__init__.py. Now checks for absolute path in filesys_config before joining to rootdir.
    - added new firmwarefiledir value as a path to a directory to store firmware files
    - upon initialisation, it checks that at least 1 .fpg exists. Raises error otherwise.
    -

- [CONFIG FILE CHANGE] added tonelist entry to roach_config with key "tonelist_file". This can be an empty
- [CONFIG FILE CHANGE] added dac_bandwidth key to roach_config (used by tonelist).

- added custom yaml resolver to parse floats of format 1e6 correctly (borrowed from SO)
- changed entry for accumulator length to now be the number of bits required.
    old: "roach_accum_len: 2**21 - 1"
    new: "roach_accum_len: 21  # 2**roach_accum_len - 1"

- modified lib_dirfiles to remove eval statements for parsing the pygetdata constants. Added two mappings
_GDDATAMAP and _GDENTRYMAP to perform the translation. It should be backward compatible.

- Added new functionality to tonelist class.
    - allows the user to pass a "loader function" that can be used to load in custom tone list files
    - implemented "optimum" lo placement for a given a tonelist.
    - kept degree of user customisation - i.e. the user can set the lo to anthing, and bb_freqs will automatically
    be updated
    - simple plotting routine to check tonelist
    - check to see if bb_freqs are outside the bandwidth, and clips the bb_freq list appropriately.

2018-12-27 17:30 [PB] ==================

- Included a roachInterface object in lib_fpga to handle all of the interactions with the ppc and fpga.
The code is similar to the kidPy implementation, with a couple of small tweaks.
    - tidied up upload_fpg function to now check if a running firmware is identical to the one being uploaded
    - sensible renaming of functions (freqComb --> gen_waveform_from_freqs)
    - simplified functionality of gen_waveform_from_freqs (prev freqComb in kidpy). It now doesn't include the
    option to account for a transfer function. This should all be handled in the object ToneList.
    - implemented code to write tones (same workflow as kidPy). Code has been checked with hardware and runs
without errors. Need now to confirm that the results remain consistent with kidPy.

- Renamed roach_interface.py --> mux_channel.py and roachInterface class --> muxChannel so as not to confuse
the roachInterface now defined in lib/lib_fpga.

- Modified muxChannel to use the new roachInterface object.

- [CONFIG FILE CHANGE] Added a firmware_file parameter to each roach entry with key:

- Fixed the AttributeError when muxChannel.shutdown() was called when a dirfile wasn't yet set

commit 2d4a259596e2c836f65e70b77174b004c8551a44 ==================
Author: sr-cdf <rowes@cardiff.ac.uk>
Date:   Thu Dec 13 15:45:48 2018 +0000

    finished synth devices and sources for independent control of single/multi port synths.

    Using Thomas's updated windfreaksynth_v2 we now have separate classes for synthesiser hardware devices and synthesiser sources for muscat.
    The lib_hardware.intiialise_connected_synths function returns a dict of the synth *sources* relating to the devices and their channels as
    named in the hardware_config.cfg and roach_config.cfg files, and no manual source switching is required. This did require adding synth devices
    and synth sources for all synths in the synthclasses submodule, including the dummy synth but should be fully backwards compatible with rest
    of the PCP code.


2018-12-11 14:14 [SR] ==================

Synth stuff:
- Set up synth instantiation based on physical devices (dummy synth is still physical)
- Multi-source synths now share a common instance
- Windfreak set up to use CLK on channel0 and LO on channel1 (muscat requirement)
- RoachInterface now sets the CLK source to 512 Mhz before loading any firmware

FPGA stuff:
- RoachInterface uploads firmware if the currently running firmware does not match.
- RoachInterface performs QDR calibration only when uploading firmware
- QDR calibration actually runs now.
- libFPGA.configure_downlink_registers now converts ip_addr strings to integers


2018-12-07 13:30 [PB] ==================

- Added this file.


2018-12-07 12:30 [PB] ==================

- Removed device_id field in the network_config file, that is what the field names (i.e. network_config.keys()) are for…
	- if there is a good reason to keep it, let me know and i’ll add it back in (edited)

- Added a maxchannels field for each roach to the roach_config file to retain flexibility
	- Modified the configuration verification accordingly
